// <auto-generated />
using System;
using CarbonNow.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarbonNow.Migrations
{
    [DbContext(typeof(CarbonNowDbContext))]
    [Migration("20250702020634_Refactoring")]
    partial class Refactoring
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CarbonNow.Model.ElectricalItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DtUso")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DuracaoUsoHoras")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EmissaoCalculada")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("IdUsuarioId")
                        .HasColumnType("int");

                    b.Property<int>("TipoItemEletricoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdUsuarioId");

                    b.HasIndex("TipoItemEletricoId");

                    b.ToTable("ElectricalItems");
                });

            modelBuilder.Entity("CarbonNow.Model.ElectricalItemType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("ConsumoKwhPorHora")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ElectricalItemType");
                });

            modelBuilder.Entity("CarbonNow.Model.Transport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("DistanciaKm")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DtUso")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("EmissaoCalculada")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("IdUsuarioId")
                        .HasColumnType("int");

                    b.Property<int>("TipoTransporteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdUsuarioId");

                    b.HasIndex("TipoTransporteId");

                    b.ToTable("Transports");
                });

            modelBuilder.Entity("CarbonNow.Model.TransportType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("ConformeIso")
                        .HasColumnType("bit");

                    b.Property<decimal>("EmissaoFatorPorKm")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TransportType");
                });

            modelBuilder.Entity("CarbonNow.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CarbonNow.Model.ElectricalItem", b =>
                {
                    b.HasOne("CarbonNow.Model.User", "IdUsuario")
                        .WithMany()
                        .HasForeignKey("IdUsuarioId");

                    b.HasOne("CarbonNow.Model.ElectricalItemType", "TipoItemEletrico")
                        .WithMany()
                        .HasForeignKey("TipoItemEletricoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdUsuario");

                    b.Navigation("TipoItemEletrico");
                });

            modelBuilder.Entity("CarbonNow.Model.Transport", b =>
                {
                    b.HasOne("CarbonNow.Model.User", "IdUsuario")
                        .WithMany()
                        .HasForeignKey("IdUsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarbonNow.Model.TransportType", "TipoTransporte")
                        .WithMany()
                        .HasForeignKey("TipoTransporteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdUsuario");

                    b.Navigation("TipoTransporte");
                });
#pragma warning restore 612, 618
        }
    }
}
